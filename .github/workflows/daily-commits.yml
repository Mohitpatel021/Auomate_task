name: daily-varied-commits

on:
  schedule:
    - cron: '*/2 * * * *'   # Daily 11:00 PM IST
  workflow_dispatch:

permissions:
  contents: write

jobs:
  commit-bot:
    runs-on: ubuntu-latest
    env:
      TZ: Asia/Kolkata
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup git identity
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Ensure folders exist
        run: |
          mkdir -p daily logs data config src/utils tests/daily docs

      # Commit #1: new daily markdown
      - name: Commit 1 - daily note
        run: |
          DATE=$(date +'%Y-%m-%d')
          FILE="daily/${DATE}.md"
          echo "# Daily Note - ${DATE}" > "$FILE"
          echo "- Created at: $(date)" >> "$FILE"
          git add "$FILE"
          if ! git diff --cached --quiet; then
            git commit -m "docs(daily): add note for ${DATE}"
          fi

      # Commit #2: CSV activity log
      - name: Commit 2 - CSV log
        run: |
          echo "timestamp,rand" | { [ -s logs/activity.csv ] || cat; } > /tmp/h
          [ -s logs/activity.csv ] && tail -n +2 logs/activity.csv >> /tmp/h || true
          mv /tmp/h logs/activity.csv
          echo "$(date +'%F %T'),$RANDOM" >> logs/activity.csv
          git add logs/activity.csv
          if ! git diff --cached --quiet; then
            git commit -m "chore(log): append activity row"
          fi

      # Commit #3: JSON stats bump
      - name: Commit 3 - JSON stats
        run: |
          DATE=$(date +'%Y-%m-%d')
          FILE="data/stats.json"
          if [ ! -f "$FILE" ]; then echo '{"days":{}}' > "$FILE"; fi
          node -e '
            const fs=require("fs");
            const f="data/stats.json";
            const o=JSON.parse(fs.readFileSync(f,"utf8"));
            const d=process.env.DATE;
            o.days[d]={ updatedAt:new Date().toISOString(), value: Math.floor(Math.random()*1000) };
            fs.writeFileSync(f, JSON.stringify(o,null,2));
          '
          git add "$FILE"
          if ! git diff --cached --quiet; then
            git commit -m "feat(stats): update ${DATE} entry"
          fi

      # Commit #4: README tip rotation
      - name: Commit 4 - README tip
        run: |
          TIPS=("Keep commits small." "Use meaningful messages." "Automate tasks." "Review before push." "Document in code.")
          TIP=${TIPS[$RANDOM % ${#TIPS[@]}]}
          [ -f README.md ] || echo "# Project" > README.md
          grep -q "<!-- AUTO:START -->" README.md || echo -e "\n<!-- AUTO:START -->\n<!-- AUTO:END -->" >> README.md
          awk -v tip="$TIP" '
            /<!-- AUTO:START -->/ { print; print "> Daily Tip: " tip; skip=1; next }
            /<!-- AUTO:END -->/ { skip=0 }
            skip!=1 { print }
          ' README.md > /tmp/r && mv /tmp/r README.md
          git add README.md
          if ! git diff --cached --quiet; then
            git commit -m "docs(readme): rotate daily tip"
          fi

      # Commit #5: Changelog entry
      - name: Commit 5 - changelog
        run: |
          DATE=$(date +'%Y-%m-%d')
          echo "## [${DATE}]\n- Daily maintenance entry\n" >> CHANGELOG.md
          git add CHANGELOG.md
          if ! git diff --cached --quiet; then
            git commit -m "docs(changelog): add ${DATE} entry"
          fi

      # Commit #6: Config tweak
      - name: Commit 6 - config tweak
        run: |
          echo "heartbeat: $(date +'%F %T %Z')" > config/settings.yml
          echo "featureToggle: $((RANDOM % 2))" >> config/settings.yml
          git add config/settings.yml
          if ! git diff --cached --quiet; then
            git commit -m "chore(config): refresh heartbeat + toggle"
          fi

      # Commit #7: TODO injection in utils
      - name: Commit 7 - utils TODO
        run: |
          echo "// TODO: check function health on $(date +'%F %T')" >> src/utils/helpers.js
          git add src/utils/helpers.js
          if ! git diff --cached --quiet; then
            git commit -m "refactor(utils): add daily TODO"
          fi

      # Commit #8: Daily test case (never fails; allows empty)
      - name: Commit 8 - test case
        run: |
          DATE=$(date +'%Y-%m-%d')
          FILE="tests/daily/test-${DATE}.spec.js"
          echo "test('sanity check ${DATE}', () => { expect(2+2).toBe(4); });" > "$FILE"
          git add "$FILE" || true
          git commit --allow-empty -m "test: add daily sanity test ${DATE}"

      # Pull latest before pushing (safe sync)
      - name: Pull latest changes
        run: |
          git pull --rebase origin main || true

      - name: Push changes
        run: |
          git push origin HEAD:main
